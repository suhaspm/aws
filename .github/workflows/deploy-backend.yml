name: Deploy backend to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build and Deploy backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Java
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: '21'
        
      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: ./demo-deploy

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./demo-deploy/target/demo-deploy-0.0.1-SNAPSHOT.jar"
          target: "~/"

      - name: Copy Systemd Service File to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./demo-deploy/backend-app.service" # Path to your service file in repo
          target: "~/backend-app.service"

      - name: SSH and Run jar on EC2
        uses: appleboy/ssh-action@v1.0.3
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: | 
            set -e # Exit immediately if a command exits with a non-zero status.

            echo "Installing/Updating Systemd Service File..."
            sudo mv ~/backend-app.service /etc/systemd/system/backend-app.service

            # Reload systemd to recognize the new/changed service file
            sudo systemctl daemon-reload

            # Enable the service (so it starts on boot) - idempotent, safe to run every time
            sudo systemctl enable backend-app.service

            echo "Stopping old backend service (if running)..."
            # Stop the service gracefully. '|| true' allows it to not fail if service wasn't running.
            sudo systemctl stop backend-app.service || true

            echo "Starting new backend service..."
            sudo systemctl start backend-app.service

            echo "Checking backend service status..."
            # Give it a moment to start up
            sleep 10
            # Check if the service is active. If not, print logs and fail the CI/CD step.
            if ! sudo systemctl is-active --quiet backend-app.service; then
              echo "Backend service failed to start! Printing last 50 lines of journalctl logs:"
              sudo journalctl -u backend-app.service --no-pager -n 50
              exit 1 # Fail the GitHub Actions step
            fi
            echo "Backend service started successfully."
            true