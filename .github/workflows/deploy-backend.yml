name: Deploy backend to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build and Deploy backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Java
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: '21'
        
      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: ./demo-deploy

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./demo-deploy/target/demo-deploy-0.0.1-SNAPSHOT.jar"
          target: "~/"

      - name: SSH and Run jar on EC2
        uses: appleboy/ssh-action@v1.0.3
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: | 
            echo "Killing old backend app if running..."
            PID=$(pgrep -f 'demo-deploy-0.0.1-SNAPSHOT.jar')
            if [ -n "$PID" ]; then
              echo "Found running JAR process with PID: $PID. Killing it."
              kill "$PID" # Send TERM signal (default)
              # Give it a moment to shut down cleanly
              sleep 5
              # Optional: check if it's still running
              if pgrep -f 'demo-deploy-0.0.1-SNAPSHOT.jar' > /dev/null; then
                  echo "Process still running after graceful kill. Forcing shutdown."
                  kill -9 "$PID" # Send KILL signal
              fi
              echo "Old backend app killed."
            else
              echo "No old backend app found running."
            fi

            echo "Running new backend app..."
            nohup java -jar demo-deploy-0.0.1-SNAPSHOT.jar > ~/backend.log 2>&1 &

